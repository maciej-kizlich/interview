<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util 
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/task
	   http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	   
<task:annotation-driven/>

<context:property-placeholder location="classpath:properties/jobs.properties" />

<bean id="cronJobsBeanPostProcessor" class="pl.maciejkizlich.interview.spring.postprocessors.CronJobsBeanPostProcessor" />

<bean id="remindUserOfBookReturnDate" class="pl.maciejkizlich.interview.scheduler.jobs.RemindUserOfBookReturnDateJob"/>
<bean id="remindUserOfBookReturnDateAfterOrderExpires" class="pl.maciejkizlich.interview.scheduler.jobs.RemindUserOfBookReturnDateAfterOrderExpires"/>
<bean id="remindUserOfBookReturnOnDayOfOrderExpiry" class="pl.maciejkizlich.interview.scheduler.jobs.RemindUserOfBookReturnOnDayOfOrderExpiry"/>
<bean id="blockReservationsForUsersWithOvertimeOrdersJob" class="pl.maciejkizlich.interview.scheduler.jobs.BlockReservationsForUsersWithOvertimeOrdersJob"/>

<task:scheduled-tasks>
	<task:scheduled ref="remindUserOfBookReturnDate" method="initJob" cron="${remind.user.of.book.return.day.before}" />
</task:scheduled-tasks>

<task:scheduled-tasks>
	<task:scheduled ref="blockReservationsForUsersWithOvertimeOrdersJob" method="initJob" cron="${block.user.reservations}" />
</task:scheduled-tasks>

<task:scheduled-tasks>
	<task:scheduled ref="remindUserOfBookReturnDateAfterOrderExpires" method="initJob" cron="${remind.user.of.book.return.days.after}" />
</task:scheduled-tasks>

<task:scheduled-tasks>
	<task:scheduled ref="remindUserOfBookReturnOnDayOfOrderExpiry" method="initJob" cron="${remind.user.of.book.return.today}" />
</task:scheduled-tasks>

</beans>